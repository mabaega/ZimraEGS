@using Newtonsoft.Json
@using ZimraEGS.Helpers
@model CloseDayViewModel

@{
    ViewData["Title"] = "Zimra Integration Setup";
    
}

<div class="container-fluid setup-container">
    <div class="row">
        <div class="col-12">
            <h2 class="text-center mb-4">Manager IO - Zimra Integration</h2>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-8 mb-4">
            <div class="card card-custom">
                <div class="card-header section-header">
                    <h5 class="mb-0">Close Fiscal Day</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted">
                        Click Close FiscalDay button to Close Device FiscalDay
                    </p>
                    <form id="closeDayForm">
                            <!-- Hidden Inputs for Model Properties --> 
                            @Html.HiddenFor(model => model.Api) 
                            @Html.HiddenFor(model => model.Token) 
                            @Html.HiddenFor(model => model.Referrer) 
                            @Html.HiddenFor(model => model.BusinessDetailJson)

                        <!-- Server Signature Section -->
                        @if (Model.BusinessDetailJson != null)
                        {
                            <hr />
                            <div class="mb-4 text-start">
                                <label class="form-label">Device Info</label>
                                <textarea class="form-control" id="textareaResponse" rows="10" wrap="off" readonly>
                                    @{
                                        try
                                        {
                                            var formattedJson = Utils.SerializeObject(JsonConvert.DeserializeObject(Model.BusinessDetailJson));
                                            @Html.Raw(formattedJson)
                                            ;
                                        }
                                        catch (Exception ex)
                                        {
                                            <text>Error processing the Manager invoice: @ex.Message</text>
                                            ;
                                        }
                                    }
                                    </textarea>
                            </div>
                        }

                        <div class="mb-3 d-flex justify-content-between">
                            <button type="button"
                                    id="backToManager"
                                    class="btn btn-secondary btn-sm"
                                    style="width: 200px;"
                                    name="backToManager"
                                    onclick="window.location.href='@Model.Referrer'">
                                Back to Manager
                            </button>
                            <button type="submit"
                                    id="closeDayButton"
                                    class="btn btn-danger btn-sm"
                                    style="width: 200px;">
                                Close FiscalDay
                                <i class="fa fa-spinner hidden" style="margin-left: 8px;"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="loading-indicator" id="loadingIndicator" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

@section Scripts {
    <script src="~/js/qrcode.js"></script>
    <script>
        $(document).ready(function () {
            function showLoading() {
                $('#loadingIndicator').fadeIn();
            }

            function hideLoading() {
                $('#loadingIndicator').fadeOut();
            }

            $('#closeDayButton').click(async function (e) {
                e.preventDefault();

                const $btn = $(this);
                const spinner = $btn.find('.fa-spinner');
                spinner.removeClass('hidden');

                const formData = $('form').serialize();

                try {
                    const response = await $.ajax({
                        url: '@Url.Action("AjaxCloseDay")',
                        method: 'POST',
                        data: formData
                    });

                    // Parse response
                    if (typeof response === 'string') {
                        response = JSON.parse(response);
                    }

                    let message = '';

                    const formattedJson = JSON.stringify(response, null, 4);
                    $('#textareaResponse').val(formattedJson);
                    $btn.prop('disabled', true); 
                    $btn.text('FiscalDay Closed');

                } catch (error) {
                    $('#textareaResponse').val('Error: ' + error.message);
                    console.error('Error processing request:', error);
                } finally {
                    spinner.addClass('hidden');
                }
            });
        });
    </script>
}
